(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],p=a[d]||0,u="".concat(d," ").concat(p);a[d]=p+1;var A=t(u),l={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(l);else{var f=o(l,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),d=0;d<a.length;d++){var p=t(a[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=s}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:(n,e,t)=>{t.d(e,{A:()=>c});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"/* body - The body for the entire application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box; \n}\n\n/* content - The content section is the main section for the application. */\n#content{\n    /* border: 1px solid red; */\n}\n\n/*-------------------------------------------------------------------------------------------------------------------------------------*/\n/*-------------------------------------------------------------------------------------------------------------------------------------*/\n/* |Navigation Header Section| */\n/* nav-header-section - The navigation header. */\n.nav-header-section{\n    display: flex;\n    align-items: center; \n    gap: 50px; \n\n    border: 1px solid #1e293b;\n    background-color:#1e293b;\n    padding: 10px;\n    cursor: pointer; \n}\n\n\n.nav-header-section > img[src]{ /* Nav Menu Bar */\n    width: 40px;\n    height: 40px; \n}\n\n.nav-header-section > h1 { /* Nav Menu Logo */\n    font-size: 15px;\n    color: #f1f5f9;\n    cursor: pointer;\n}\n.nav-header-section > h1:hover{\n    color: #94a3b8;\n}\n\n","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,gDAAgD;AAChD;IACI,UAAU;IACV,SAAS;AACb;;AAEA,6CAA6C;AAC7C;IACI,sBAAsB;AAC1B;;AAEA,2EAA2E;AAC3E;IACI,2BAA2B;AAC/B;;AAEA,wIAAwI;AACxI,wIAAwI;AACxI,gCAAgC;AAChC,gDAAgD;AAChD;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,yBAAyB;IACzB,wBAAwB;IACxB,aAAa;IACb,eAAe;AACnB;;;AAGA,gCAAgC,iBAAiB;IAC7C,WAAW;IACX,YAAY;AAChB;;AAEA,2BAA2B,kBAAkB;IACzC,eAAe;IACf,cAAc;IACd,eAAe;AACnB;AACA;IACI,cAAc;AAClB",sourcesContent:["/* body - The body for the entire application. */\nbody{\n    padding: 0;\n    margin: 0;\n}\n\n/* * - All the elements in the application. */\n*{\n    box-sizing: border-box; \n}\n\n/* content - The content section is the main section for the application. */\n#content{\n    /* border: 1px solid red; */\n}\n\n/*-------------------------------------------------------------------------------------------------------------------------------------*/\n/*-------------------------------------------------------------------------------------------------------------------------------------*/\n/* |Navigation Header Section| */\n/* nav-header-section - The navigation header. */\n.nav-header-section{\n    display: flex;\n    align-items: center; \n    gap: 50px; \n\n    border: 1px solid #1e293b;\n    background-color:#1e293b;\n    padding: 10px;\n    cursor: pointer; \n}\n\n\n.nav-header-section > img[src]{ /* Nav Menu Bar */\n    width: 40px;\n    height: 40px; \n}\n\n.nav-header-section > h1 { /* Nav Menu Logo */\n    font-size: 15px;\n    color: #f1f5f9;\n    cursor: pointer;\n}\n.nav-header-section > h1:hover{\n    color: #94a3b8;\n}\n\n"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var r=t(72),o=t.n(r),a=t(825),i=t.n(a),c=t(659),s=t.n(c),d=t(56),p=t.n(d),u=t(540),A=t.n(u),l=t(113),f=t.n(l),h=t(159),v={};v.styleTagTransform=f(),v.setAttributes=p(),v.insert=s().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=A(),o()(h.A,v),h.A&&h.A.locals&&h.A.locals;const m=t.p+"42525aa33e1a4b0ab453.svg",g=t.p+"3cbbb0d064d7e00b26e6.svg";function b(){document.querySelector(".nav-header-section > img[src]").src=g}function C(){document.querySelector(".nav-header-section > img[src]").src=m}console.log("Initializing Content"),function(){const n=document.getElementById("content"),e=document.createElement("nav");e.classList.add("nav-header-section"),n.appendChild(e),function(){const n=document.querySelector(".nav-header-section"),e=document.createElement("img");e.src=m,e.addEventListener("mouseover",b),e.addEventListener("mouseout",C),n.appendChild(e)}(),function(){const n=document.querySelector(".nav-header-section"),e=document.createElement("h1");e.textContent="PROLIFIC GAMING",n.appendChild(e)}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,